$default-font: 'Source Sans Pro', sans-serif;
$thin-default: 300;
$bold-default: 700;
@mixin center-align($percent: -100%) {
  margin: 0;
  position: relative;
  top: 50%;
  transform: translateY($percent);
}
$bgwidth: 800px;
$bgheight: 531px;
@mixin section-title-size() {
  font-size: 3em;
}

@mixin section-div-style($padding) {
  text-align: left;
  padding: $padding;
}

@mixin section-item() {
  display: inline-block;
  padding: 20px;
}
.individual-item {
  @include section-item;
}
@media screen and (max-width: 320px) {
  .section {
      @include section-div-style(20px);
  }
}
@media screen and (min-width: 321px) {
  .section {
      @include section-div-style(50px);
  }
}
///
/// Viewport sized typography with minimum and maximum values
///
/// @author Eduardo Boucas (@eduardoboucas)
///
/// @param {Number}   $responsive  - Viewport-based size
/// @param {Number}   $min         - Minimum font size (px)
/// @param {Number}   $max         - Maximum font size (px)
///                                  (optional)
/// @param {Number}   $fallback    - Fallback for viewport-
///                                  based units (optional)
///
/// @example scss - 5vw font size (with 50px fallback),
///                 minumum of 35px and maximum of 150px
///  @include responsive-font(5vw, 35px, 150px, 50px);
///
@mixin responsive-font($responsive, $min, $max: false, $fallback: false) {
  $responsive-unitless: $responsive / ($responsive - $responsive + 1);
  $dimension: if(unit($responsive) == 'vh', 'height', 'width');
  $min-breakpoint: $min / $responsive-unitless * 100;

  @media (max-#{$dimension}: #{$min-breakpoint}) {
    font-size: $min;
  }

  @if $max {
    $max-breakpoint: $max / $responsive-unitless * 100;

    @media (min-#{$dimension}: #{$max-breakpoint}) {
      font-size: $max;
    }
  }

  @if $fallback {
    font-size: $fallback;
  }

  font-size: $responsive;
}
